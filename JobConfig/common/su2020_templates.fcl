# -*- mode:tcl -*- 
#------------------------------------------------------------------------------
# su2020/common/templates.fcl 
# all prolog files have to be included before the templates files
# template file can include each other
#------------------------------------------------------------------------------
# global defaults 
#------------------------------------------------------------------------------
# BEGIN_PROLOG
#   bgHitFiles   : @nil
#   INPUT_MODULE : EmptyEvent             # EmptyEvent / RootInput
#   TRIGGER_PATH : p1
#   PROCESS_NAME : Stnmaker
# END_PROLOG
#------------------------------------------------------------------------------
# no more prologs beyond this point
# 
# (1): services section (Services.SimAndReco and Services.Sim today are the same)
#       add time tracker template
#------------------------------------------------------------------------------
# onclude "JobConfig/common/trigger_templates.fcl"

services : { @table::Services.SimAndReco
    TimeTracker : {
	printSummary : true
	dbOutput : {
	    filename  : ""
	    overwrite : false
	}
    }
}

services.scheduler.wantSummary        : true
services.TFileService.fileName        : "nts._USER_._DATASET_._DSCONF_.sequencer.root" 

# Limit the amount of "Begin processing the ... record" messages
services.message.destinations.log.categories.ArtReport.reportEvery : 1
services.message.destinations.log.categories.ArtReport.limit       : 10000
services.message.destinations.log.categories.ArtReport.timespan    : 300
#------------------------------------------------------------------------------
# (2): definition of the input module - can redefine in the top-level prolog
#------------------------------------------------------------------------------
source : { 
    module_type : @local::INPUT_MODULE
    #    fileNames : ["/mu2e/data/tdr/beam/g4s4p5/tdr.beam.g4s4.conversion.1504a.15729672/good/00000/dsStopsToHitsConversion.root"]
    #    maxEvents   : 100
    inputCommands : ['keep *_*_*_*'
		     #		     , 'drop *_muonTimeMap_*_*'
		     #		     , 'drop *_protonTimeMap_*_*'
		     #		     , 'drop mu2eStrawDigis_*_*_*'
		     #		     , 'drop mu2eStrawHits_*_*_*'
		     #		     , 'drop *_CaloReadoutHitsMaker_*_*'
		     #		     , 'drop *_CaloCrystalHitsMaker_*_*'
		     # Uncomment the above lines to reduce file size.
		    ]
}

su2020 : {
    producers : { 
#------------------------------------------------------------------------------
# MC producers
#------------------------------------------------------------------------------
	@table::Trigger.producers
	@table::EventGenerator.producers  # defined in EventGenerator
	@table::CommonMC.producers        # FIXME
	@table::Mu2eG4.producers          # defined in Mu2eG4/fcl
	@table::CaloDigiMC.producers      # defined in CaloDigiMC
	@table::CaloDigiMC.producersMC    # defined in CaloDigiMC
	@table::CaloCluster.producersMC   # defined in CaloCluster
	@table::CrvDAQPackage.producers   # 
	@table::TrackerMC.producers       # defined in TrackerMC

	compressDigiMCs : { @table::DigiCompression.Primary       # defined in Filters/fcl/
	    crvDigiMCTag         : ""
	}
                                                                  # need these tags for mixing
	makeSGSPrimary   : { @table::makeSGS }
	                                                          # in mixing mode, still filter on primary
	makeSDPrimary    : { @table::makeSD
	    StrawGasStepModule : makeSGSPrimary
	    TimeOffsets        : [ @sequence::CommonMC.TimeMapsPrimary ]
	}

	generate  : { @table::EventGenerator.producers.egun }      # to avoid unnecessary diagnostics
	genCounter: { module_type: GenEventCounter }

	# dummy protonBunchIntensity objects for primary-only datasets
	protonBunchIntensity : { module_type: ProtonBunchIntensityFlat
	    mean      : 0.0 # No PBI possible for pure signal! 
	    halfWidth : 1.0
	}
#------------------------------------------------------------------------------
# reco producers, compressDigiMCs defined there 
#------------------------------------------------------------------------------

	@table::Reconstruction.producers   # inherited from JobConfig/reco/prolog.fcl

	@table::ParticleID.producers
	@table::TrackCaloMatching.producers

	@table::CommonTrk.producers

	TrkQualDeMHPar  : { @table::TrkQualDeM  KalSeedCollection: "KFFDeMHPar"  }
	TrkQualDeMHDar  : { @table::TrkQualDeM  KalSeedCollection: "KFFDeMHDar"  }
	TrkQualDmuMHPar : { @table::TrkQualDmuM KalSeedCollection: "KFFDmuMHPar" }
	TrkQualDmuMHDar : { @table::TrkQualDmuM KalSeedCollection: "KFFDmuMHDar" }

#------------------------------------------------------------------------------
# helix mergers: each combines all found helices with the same direction and mass 
# into one collection
#------------------------------------------------------------------------------
	MHFinderDe : { @table::TrkReco.producers.MergeHelices
	    HelixFinders : [ "HelixFinderDe:Positive", "CalHelixFinderDe:Positive", "HelixFinderDe:Negative", "CalHelixFinderDe:Negative"]
	}
	MHFinderDmu : { @table::TrkReco.producers.MergeHelices
	    HelixFinders : [ "HelixFinderDmu:Positive", "CalHelixFinderDmu:Positive", "HelixFinderDe:Negative", "CalHelixFinderDe:Negative"]
	}
	MHFinderUe : { @table::TrkReco.producers.MergeHelices
	    HelixFinders : [ "HelixFinderUe:Positive", "HelixFinderUe:Negative"]
	}
	MHFinderUmu : { @table::TrkReco.producers.MergeHelices
	    HelixFinders : [ "HelixFinderUe:Positive", "HelixFinderUe:Negative"]
	}

#------------------------------------------------------------------------------
# track fit, downstream electron hypothesis
#------------------------------------------------------------------------------
	KSFDeMH     : { @table::KSFDeM                            SeedCollection : MHFinderDe  CheckHelicity:false }
	KFFDeMHPar  : { @table::KFFDeM                            SeedCollection : KSFDeMH  }
	KFFDeMHDar  : { @table::CalPatRec.producers.CalTrkFitDem  SeedCollection : KSFDeMH  }

#------------------------------------------------------------------------------
# track fit, downstream muon hypothesis
#------------------------------------------------------------------------------
	KSFDmuMH    : { @table::KSFDmuM                           SeedCollection : MHFinderDmu CheckHelicity:false}
	KFFDmuMHPar : { @table::KFFDmuM                           SeedCollection : KSFDmuMH }
	KFFDmuMHDar : { @table::CalPatRec.producers.CalTrkFitDmm  SeedCollection : KSFDmuMH }

#------------------------------------------------------------------------------
# track fit, upstream electron hypothesis
#------------------------------------------------------------------------------
	KSFUeMH     : { @table::KSFUeM                            SeedCollection : MHFinderUe  CheckHelicity:false }
	KFFUeMHPar  : { @table::KFFUeM                            SeedCollection : KSFUeMH  }
#------------------------------------------------------------------------------
# track fit, upstream muon hypothesis
#------------------------------------------------------------------------------
	KSFUmuMH    : { @table::KSFUmuM                           SeedCollection : MHFinderUmu CheckHelicity:false}
	KFFUmuMHPar : { @table::KFFUmuM                           SeedCollection : KSFUmuMH }
    }
#------------------------------------------------------------------------------
#  filters
#------------------------------------------------------------------------------
    filters : {
	@table::Trigger.filters

	g4status       : { @table::g4status }   # in Filters/fcl/prolog.fcl

	detectorFilter : { module_type: FilterG4Out
	    mainHitInputs   : [ "g4run:tracker" ]
	    mainSPPtrInputs : []
	    extraHitInputs  : [ "g4run:virtualdetector", "g4run:protonabsorber" ]
	    vetoDaughters   : []
	}

	filterStepPointMomentum : { @table::FilterStepPointMomentum
	    cutMomentumMin : -1
	}

	@table::CalPatRec.filters

	StrawDigiMCFilter : { @table::StrawDigiMCFilter }              # Filters/fcl/prolog.fcl

	CaloShowerSimFilter : { module_type :CaloShowerSimFilter
	    particleTypes     : [ 22, 11, -11, 13, -13, 2212, -2212  ] # save photons, electrons, muons, and protons
	    MinParticleEnergy : 40.0
	    MinTotalEnergy    : 10000.0 # disable
	}
	GammaFilter : { module_type : GammaDaughterFilter
	    doFilter    : false 
	}
    }

    analyzers : {
	@table::Trigger.analyzers
        genCountLogger            : { module_type: GenEventCountReader } # defalt: 1 StepPointMC, 10 MeV
    }
}

#------------------------------------------------------------------------------
# output event formats
# 1. event format for mixing input
#------------------------------------------------------------------------------
su2020.gen_sim_output       : [ "drop    *_*_*_*"                                 ,
				"keep    mu2e::EventWeight_*_*_*"                 ,
				"keep    mu2e::EventWindowMarker_EWMProducer_*_*" ,
				"keep    mu2e::FixedTimeMap_*_*_*"                ,
				"keep    mu2e::GenEventCount_*_*_*"               ,
				"keep    mu2e::GenParticles_*_*_*"                ,
				"keep    *_g4run_*_*"                             ,
				"drop    mu2e::StepPointMCs_g4run_calorimeter_*"  ,
				"drop    mu2e::StepPointMCs_g4run_calorimeterRO_*",
				"keep    mu2e::CaloShowerSteps_*_*_*"
			       ]
#------------------------------------------------------------------------------
# 2. output format for digi files
#------------------------------------------------------------------------------
su2020.gen_sim_digi_output  : [ "drop    *_*_*_*"                                ,
				"keep    *_compressDigiMCs_*_*"                  ,
				"keep    mu2e::GenEventCount_*_*_*"              ,
				"keep    mu2e::GenParticles_generate_photon_*"   ,
				"keep    mu2e::StatusG4_g4run_*_*"               ,
				"keep    mu2e::EventWeight_*_*_*"                ,
				"keep    mu2e::EventWindowMarker_EWMProducer_*_*",
				"keep    mu2e::FixedTimeMap_*_*_*"               ,
				"keep    mu2e::CaloDigis_CaloDigiFromShower_*_*" ,
				"keep    mu2e::CrvDigis_CrvDigi_*_*"             ,
				"keep    mu2e::ProtonBunchIntensity_*_*_*"       ,
				"keep    mu2e::StrawDigis_makeSD_*_*"            ,
				"keep    art::TriggerResults_TriggerResults_*_*"
			       ]
#------------------------------------------------------------------------------
# 2. output format for digi files after mixing
#------------------------------------------------------------------------------
su2020.mixing_output : [ "drop *_*_*_*"                               ,
			 "keep *_compressDigiMCs_*_*"                 ,
			 "keep mu2e::GenEventCount_*_*_*"             ,
			 "keep mu2e::GenParticles_generate_photon_*"  ,
			 "keep mu2e::EventWeight_*_*_*"               ,
			 "keep mu2e::EventWindowMarker_*_*_*"         ,
			 "keep mu2e::ProtonBunchIntensity_*_*_*"      ,
			 "keep mu2e::StrawDigis_*_*_*"                ,
			 "keep mu2e::CaloDigis_*_*_*"                 ,
			 "keep mu2e::CrvDigis_*_*_*"                  ,
			 "keep art::TriggerResults_TriggerResults_*_*"
			]

su2020.outputs: {
    defaultOutput : { module_type : RootOutput
	SelectEvents  : [ @sequence::TRIGGER_PATHS ]
	outputCommands: [ "keep *_*_*_*" ]
    }
    FullOutput : { @table::Mixing.Output  outputCommands : [ "keep *_*_*_*"                  ] }
    DetOutput  : { @table::Mixing.Output  outputCommands : [ @sequence::su2020.mixing_output ] }
}

#------------------------------------------------------------------------------
# module sequences - by functionality
#------------------------------------------------------------------------------
su2020.gen_g4              : [ generate, genCounter, g4run, g4status ]

su2020.gen_g4_pbi          : [ generate, genCounter, g4run, protonBunchIntensity ]

su2020.gen_g4_pbi_detFilter: [ generate, genCounter, g4run, protonBunchIntensity, filterStepPointMomentum ]

su2020.pbi_ewm             : [ protonBunchIntensity, EWMProducer ]

su2020.digis               : [ @sequence::TrackerMC.DigiSim, StrawDigiMCFilter, 
			       @sequence::CaloDigiMC.DigiSim, 
			       @sequence::CrvDAQPackage.CrvDAQSequence 
			       # compressDigiMCs 
			      ]

su2020.digis_no_filter     : [ @sequence::TrackerMC.DigiSim, 
			       # StrawDigiMCFilter, 
			       @sequence::CaloDigiMC.DigiSim, 
			       @sequence::CrvDAQPackage.CrvDAQSequence
			       # compressDigiMCs 
			      ]

su2020.digisCaloFilter     : [ @sequence::CaloDigiMC.DigiSim, CaloShowerSimFilter,
			       @sequence::TrackerMC.DigiSim, 
			       @sequence::CrvDAQPackage.CrvDAQSequence 
			       # compressDigiMCs 
			      ]

# calorimeter reconstruction
su2020.calo_hit_reco        : [ CaloRecoDigiFromDigi ,CaloCrystalHitFromHit ]

su2020.calo_cluster_reco    : [ CaloProtoClusterFromCrystalHit, CaloClusterFromProtoCluster ]

su2020.calo_reco            : [ @sequence::su2020.calo_hit_reco,
				@sequence::su2020.calo_cluster_reco ]

# track hit reconstruction
su2020.trk_hit_reco         : [ makeSH, makePH, FlagBkgHits]


# CRV reconstruction
su2020.crv_reco             : [ @sequence::CrvRecoMCPackage.CrvRecoMCSequence ]

# downstream e+/e- helix reconstruction
su2020.helix_reco_de : [
			TimeClusterFinderDe, HelixFinderDe,                     # TrkPatRec
			CalTimePeakFinder, DeltaFinder, CalHelixFinderDe,       # CalPatRec
			MHFinderDe                                              # helix merging
		       ]

# downstream electron reconstruction: e- and e+ combined
su2020.trk_reco_de  : [
		       TimeClusterFinderDe, HelixFinderDe,                     # TrkPatRec
		       CalTimePeakFinder, DeltaFinder, CalHelixFinderDe,       # CalPatRec
		       MHFinderDe,                                             # helix merging
		       KSFDeMH,                                                # Seed fit (chisquared, no drift)
		       KFFDeMHPar, KFFDeMHDar                                  # final Kalman filter fit with the Panel-based AR
		      ]

su2020.trk_reco_de_dar : [
		       TimeClusterFinderDe, HelixFinderDe,                     # TrkPatRec
		       CalTimePeakFinder, DeltaFinder, CalHelixFinderDe,       # CalPatRec
		       MHFinderDe,                                             # helix merging
		       KSFDeMH,                                                # Seed fit (chisquared, no drift)
		       KFFDeMHDar                                              # final Kalman filter, DAR-only
		      ]

# downstream muon reconstruction: mu- and mi+ combined
su2020.trk_reco_dmu : [
		       TimeClusterFinderDmu, HelixFinderDmu,                   # TrkPatRec
		       CalTimePeakFinderMu, DeltaFinderMu, CalHelixFinderDmu,  # CalPatRec
		       MHFinderDmu,                                            # helix merging
		       KSFDmuMH,                                               # Seed fit (chisquared, no drift)
		       KFFDmuMHPar, KFFDmuMHDar                                # final Kalman filter fit with the panel-based AR
		      ]

su2020.trk_reco_dmu_dar : [
		       TimeClusterFinderDmu, HelixFinderDmu,                   # TrkPatRec
		       CalTimePeakFinderMu, DeltaFinderMu, CalHelixFinderDmu,  # CalPatRec
		       MHFinderDmu,                                            # helix merging
		       KSFDmuMH,                                               # Seed fit (chisquared, no drift)
		       KFFDmuMHDar                                             # final Kalman filter fit, DAR-only
		      ]

# upstream electron reconstruction (e- and e+): standalone-only pattern recognition, 
# calorimeter-seeded algorithm is designed to deal only with the downstream tracks
su2020.trk_reco_ue  : [
		       TimeClusterFinderUe, HelixFinderUe,   
		       MHFinderUe,                                             # helix merging
		       KSFUeMH,                                                # Seed fit (chisquared, no drift)
		       KFFUeMHPar , KFFUeMHDar                                 # final Kalman filter fit
		      ]

# upstream muon reconstruction (mu- and mu+): standalone-only pattern recognition, 
# calorimeter-seeded algorithm is designed to deal only with the downstream tracks
su2020.trk_reco_umu : [
		       TimeClusterFinderUmu, HelixFinderUmu,   
		       MHFinderUmu,                                            # helix merging
		       KSFUmuMH,                                               # Seed fit (chisquared, no drift)
		       KFFUmuMHPar , KFFUeMHDar                                # final Kalman filter fit
		      ]

# tracks reconstructions: positive and negative charges separate
# use sequecnes defined in JobConfig/reco/prolog.fcl
su2020.trk_reco_sep  : [ @sequence::Reconstruction.DeSequence,
			 @sequence::Reconstruction.UeSequence,
			 @sequence::Reconstruction.DmuSequence,
			 @sequence::Reconstruction.UmuSequence
		       ]

# MC compression at the end of reco, assume the pulse punch intensity to be present
su2020.reco_compression : [ FindMCPrimary,        # find the primary particle
			    SelectRecoMC,         # identify the MC information we want to keep
			    compressRecoMCs       # compress
			  ]

# trigger paths considered, include into digi datasets
su2020.triggers         : [
			   tprSeedDeM_trigger    , cprSeedDeM_trigger    , tprSeedDeP_trigger    , cprSeedDeP_trigger    , 
			   cprLowPSeedDeM_trigger, cprLowPSeedDeP_trigger, tprLowPSeedDeM_trigger, tprLowPSeedDeP_trigger, 
			   tprHelixIPADeM_trigger
			  ]
#------------------------------------------------------------------------------
# SU2020 paths
#------------------------------------------------------------------------------
    su2020.paths : {
	@table::Trigger.paths
#------------------------------------------------------------------------------
# start from including the trigger paths
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
# gcl: an attempt to introduce a standard name for genCountLogger path
#------------------------------------------------------------------------------
	gcl        : [ genCountLogger ]
#------------------------------------------------------------------------------
# p1  : MC generation, G4, digitization
# p12 : MC generation, G4, filter events with at least one step point in the tracker of the calorimeter
# p14 : prepare inputs for mixing
#------------------------------------------------------------------------------
	su2020_p1 : [ @sequence::su2020.gen_g4_pbi,           # includes protonBunchIntensity
		      GammaFilter,                            # does nothing by default
		      @sequence::CommonMC.DigiSim      ,      # adds TimeMaps, EWMProducer (name - confusing)
		      @sequence::su2020.digis          ,
		      compressDigiMCs
		     ]

	# same as su2020_p1, but using a calo filter instead of straw digi filter
	su2020_p1calo : [ @sequence::su2020.gen_g4_pbi     , 
			  GammaFilter                      ,  # does nothing by default
			  @sequence::CommonMC.DigiSim      ,  # TimeMaps, EWMProducer
			  @sequence::su2020.digisCaloFilter,
			  compressDigiMCs

			 ]

	su2020_p10 : [ @sequence::su2020.gen_g4_pbi,          # includes ProtonBunchIntensity
		       filterStepPointMomentum ,
		       GammaFilter,                           # does nothing by default
		       @sequence::CommonMC.DigiSim       ,    # adds TimeMaps, EWMProducer (name - confusing)
		       @sequence::su2020.digis_no_filter ,    # no StrawDigiMCFilter, for mixing
		       compressDigiMCs
		      ]

	su2020_p11 : [ g4run, protonBunchIntensity,           # what's left of @sequence::su2020.gen_g4_time_map,
		       @sequence::CommonMC.DigiSim, 
		       GammaFilter                ,           # does nothing by default
		       @sequence::su2020.digis    ,
		       compressDigiMCs
		     ]

	su2020_p111 : [ @sequence::su2020.pbi_ewm   ,          # what's left of @sequence::su2020.gen_g4_time_map,
			@sequence::CommonMC.TimeMaps, 
			GammaFilter                 ,          # does nothing by default
			@sequence::su2020.digis_no_filter,
			compressDigiMCs
		       ]

	su2020_p12 : [ @sequence::su2020.gen_g4_pbi,          # includes ProtonBunchIntensity
		       filterStepPointMomentum,               # 
		       @sequence::CommonMC.DigiSim            # adds TimeMaps, EWMProducer (name - confusing)
		      ]


	su2020_p13 : [ g4run , 
		       filterStepPointMomentum,               # 
		       @sequence::CommonMC.DigiSim            # adds TimeMaps, EWMProducer (name - confusing)
		      ]

	su2020_p14_mustop : [ generate, genCounter, g4run, filterStepPointMomentum, 
			      # protonTimeMap, muonTimeMap, 
			      CaloShowerStepFromStepPt
			     ]                                # path for producing mixing inputs from muon captures

	su2020_p14_flash : [ g4run, filterStepPointMomentum
			     # protonTimeMap, 
			     # CaloShowerStepFromStepPt
			    ]                                 # path for producing the mixing input from beam flash 

	su2020_p15_flash : [ protonTimeMap           , 
			     filterStepPointMomentum ,        # filter again, now - on time, need step points...
			     CaloShowerStepFromStepPt
			    ]                                 # path for producing the mixing input from beam flash 
#------------------------------------------------------------------------------
# p2: read digis, do reconstruction: run downstream electron and muon reco paths
#------------------------------------------------------------------------------
	su2020_p2 : [ @sequence::su2020.calo_reco,
		      @sequence::su2020.trk_hit_reco,
		      @sequence::su2020.trk_reco_de ,
		      @sequence::su2020.trk_reco_dmu , 
		      @sequence::su2020.trk_reco_sep ,
		      @sequence::su2020.reco_compression
		     ]

#------------------------------------------------------------------------------
# p21: read digis, do reconstruction: run downstream electron and muon reco paths
#------------------------------------------------------------------------------
	su2020_p21 : [ @sequence::su2020.calo_reco,
		       @sequence::su2020.trk_hit_reco,
		       @sequence::su2020.trk_reco_de ,
		       @sequence::su2020.trk_reco_dmu
		      ]

#------------------------------------------------------------------------------
# p22: read digis, reconstruct helices
#------------------------------------------------------------------------------
	su2020_p22 : [ @sequence::su2020.calo_reco,
		       @sequence::su2020.trk_hit_reco,
		       @sequence::su2020.helix_reco_de
		      ]

#------------------------------------------------------------------------------
# p100: concatenation job, trigger path is empty
#------------------------------------------------------------------------------
	su2020_p100 : [ ]
    }
#------------------------------------------------------------------------------
# introduce blind time - start of digitization
#------------------------------------------------------------------------------
services.DbService.verbose                                   : 0
services.ProditionsService.strawElectronics.useDb            : false
services.ProditionsService.strawElectronics.verbose          : 0

services.ProditionsService.strawElectronics.flashEnd         : @erase
services.ProditionsService.strawElectronics.flashEnd         : @local::BLIND_TIME

physics.producers.makeSH.minimumTime                         : @erase
physics.producers.makeSH.minimumTime                         : @local::BLIND_TIME

physics.producers.CaloShowerStepROFromShowerStep.blindTime   : @erase
physics.producers.CaloShowerStepROFromShowerStep.blindTime   : @local::BLIND_TIME

physics.producers.CaloDigiFromShower.blindTime               : @erase 
physics.producers.CaloDigiFromShower.blindTime               : @local::BLIND_TIME

physics.producers.CaloProtoClusterFromCrystalHit.timeCut     : @erase
physics.producers.CaloProtoClusterFromCrystalHit.timeCut     : @local::BLIND_TIME

physics.producers.TimeClusterFindere.tmin                    : @erase
physics.producers.TimeClusterFindere.tmin                    : @local::BLIND_TIME
# 
physics.filters.CalTimePeakFinder.minClusterTime             : @erase
physics.filters.CalTimePeakFinder.minClusterTime             : @local::BLIND_TIME
# 
physics.producers.DeltaFinder.minimumTime                    : @erase
physics.producers.DeltaFinder.minimumTime                    : @local::BLIND_TIME
# 
physics.filters.CalHelixFinderDe.HelixFinderAlg.minimumTime : @erase
physics.filters.CalHelixFinderDe.HelixFinderAlg.minimumTime : @local::BLIND_TIME

#------------------------------------------------------------------------------
# common patches to offline modules (inherited from JobConfig)
#------------------------------------------------------------------------------
su2020.producers.cosmicTimeMap.tmin   : 400 
su2020.producers.makeSD.AllHitsPlanes : [34,35]

su2020.producers.g4run.SDConfig.enableSD : [ @sequence::su2020.producers.g4run.SDConfig.enableSD, "protonabsorber" ]

services.ConditionsService : { @table::services.ConditionsService
    StrawElectronics: { 
	FlashStart             : 1705
	DiscriminatorThreshold : [  # 192 total
				  12.2 , 11.3 , 12.6 , 12.5 , 12.7 , 12.5 , 12.3 , 11.1 , 11.3 , 12.1 , #  0
				  11.6 , 11.5 , 13.0 , 11.1 , 10.5 , 11.4 , 11.0 , 12.0 , 12.8 , 12.8 , # 10
				  12.1 , 11.2 , 11.6 , 13.1 , 12.3 , 12.3 , 12.2 , 11.8 , 13.5 , 13.4 , # 20
				  10.7 , 11.7 , 13.6 , 12.3 ,  9.9 , 12.1 , 10.4 , 13.2 , 11.9 , 13.5 , 
				  12.5 , 12.6 , 12.1 , 14.2 , 13.3 , 11.5 , 11.5 , 11.7 , 11.6 , 13.2 , 
				  14.9 , 12.7 , 12.7 , 12.6 , 11.4 , 13.5 , 12.2 , 12.6 , 11.9 , 10.3 , 
				  12.4 , 12.3 , 11.1 , 10.7 , 12.0 , 12.9 , 13.4 , 13.8 , 11.1 , 13.1 , 
				  13.2 , 12.3 , 13.3 , 12.6 , 11.6 , 11.4 , 11.6 , 11.9 , 10.9 , 10.8 , 
				  11.5 , 12.4 , 11.5 , 11.0 , 12.3 , 12.4 , 12.2 , 10.9 , 11.7 , 11.3 , 
				  12.8 , 13.3 , 11.4 , 12.6 , 10.7 , 12.0 , 14.3 , 12.1 , 12.4 , 12.6 , 
				  11.5 , 13.3 , 11.8 , 13.3 , 11.4 , 11.0 , 11.8 , 13.1 , 12.6 , 11.5 , # 100
				  10.5 , 11.2 , 12.5 , 11.9 , 11.4 , 12.3 , 11.7 , 12.2 , 13.4 , 10.5 , 
				  12.6 , 11.7 , 12.3 , 11.3 , 12.0 , 12.6 , 12.5 , 12.1 , 11.2 , 13.6 , 
				  11.9 , 11.4 , 12.6 , 12.9 , 11.4 , 12.8 , 11.4 , 13.2 , 13.0 , 11.4 , 
				  13.2 , 12.4 , 13.1 , 14.9 , 12.4 , 11.2 , 10.6 , 10.4 , 11.3 , 13.0 , 
				  10.8 , 11.9 , 11.6 , 12.3 , 11.4 , 12.6 , 12.3 , 13.7 , 12.7 , 12.1 , 
				  12.3 , 10.2 ,  9.9 , 10.9 , 11.6 , 12.6 , 12.7 , 12.4 , 10.9 , 12.2 , 
				  13.2 , 13.2 , 11.3 , 12.8 , 11.7 , 12.7 , 13.3 , 12.4 , 12.0 , 12.3 , 
				  12.0 , 12.9 , 11.9 , 12.6 , 11.6 , 13.6 , 12.8 , 13.6 , 13.3 , 13.2 , # 190
				  12.4 , 11.6 ]
    }
}
#----------------------------------------------------------------------------
# 2020-09-18 P.M. : update CRV light yield - take out the 30% "safety factor"
#----------------------------------------------------------------------------
su2020.producers.CrvPhotons.scintillationYield               : 16545
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# 2020-08-18 P.M. : changes to the CRV thresholds wrt CRVResponse/fcl/prolog_v8.fcl (by Ben/Yuri)
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#                      old(v8)  PEthresholds                 : [  26 ,  26 ,  26 ,  26 ,  26 ,  26 ,  26 ,  36 ,  22 ,  18 ,  20 ,  36 ,  36 ,  28 ,  36 ,  36 ,  36 ,  36 ,  26 ,  26 ,  26 ,  26 ]
su2020.producers.CrvCoincidence.PEthresholds                 : [  8  ,   8 ,   8 ,   8 ,   8 ,   8 ,   8 ,   8 ,   8 ,  8  ,  8  ,   8 ,   8 ,   8 ,  8  ,  8  ,   8 ,  8  ,   8 ,   8 ,   8 ,   8 ]

#                      old(v8)  useFourLayers                : [false,false,false,false,false,false,false, true, true,false,false, true, true, true,false,false,false,false,false,false,false,false] 
su2020.producers.CrvCoincidence.useFourLayers                : [false,false,false,false,false,false,false, true,false,false,false, true, true, true, true, true, true, true,false,false,false,false]

#                      old(v8)  adjacentPulseTimeDifferences : [   5 ,   5 ,   5 ,   5 ,   5 ,   5 ,   5 ,  10 ,  10 ,   5 ,   5 ,  10 ,  10 ,  10 ,   5 ,   5 ,   5 ,   5 ,   5 ,   5 ,   5 ,   5 ] //ns
su2020.producers.CrvCoincidence.adjacentPulseTimeDifferences : [  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ,  10 ] //ns

# for reco compression we don't have CRV reco path at the moment
su2020.producers.SelectRecoMC.SkipCrv                        : true
su2020.producers.compressRecoMCs.crvDigiMCTag                : ""
su2020.producers.compressRecoMCs.crvDigiMCIndexMapTag        : ""
su2020.producers.compressRecoMCs.crvCoincClusterMCTag        : ""
