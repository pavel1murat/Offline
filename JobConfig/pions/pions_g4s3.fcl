# -*- mode:tcl -*-
// Andrei Gaponenko, 2013
// Jake Colston & Joseph Brock, 2015 (edit for cd3)

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

BEGIN_PROLOG

// Energy cuts on electron, positron, photon, and neutron.
CutEPPhN : {
    type : intersection
    pars : [ { type: kineticEnergy cut: 100.0 },
             { type: pdgId pars: [ 11, -11, 22, 2112 ] } ]
}

END_PROLOG

# Give this job a name.
process_name : pionsg4s3

source : { 
    module_type : RootInput
}

services : { @table::Services.Sim 
    TFileService           : { fileName : "nts.owner.pions-g4s3.version.sequencer.root" }
    GeometryService        : { @table::Services.Sim.GeometryService
	inputFile      : "Mu2eG4/geom/geom_common_current.txt"    
    }
}

physics : {

    producers : {

        g4run : {

            module_type       : Mu2eG4
            physics           : @local::mu2eg4DefaultPhysics
            ResourceLimits    : @local::mu2eg4DefaultResourceLimits
            TrajectoryControl : @local::mu2eg4NoTrajectories
            debug             : @local::mu2eg4DefaultDebug
            visualization     : @local::mu2eg4NoVisualization

            MultiStageParameters : {
                simParticleNumberOffset  : 200000
                genInputHits             : [ "g4filter:vacuuas2" ]
                inputSimParticles        : "g4filter"
                inputMCTrajectories      : ""
                inputPhysVolumeMultiInfo : "compressPV"
            }

#            doWriteLegacyPhysVolumeInfo : false

            SDConfig : {
                enableSD         : [ virtualdetector ] // activate just the explicitly listed SDs
                preSimulatedHits : [ "g4filter:virtualdetector" ]
                TimeVD           : { times : [] }
            }

            // Mu2eG4 cuts are evaluated in the listed order.
            // The first match wins.  For the "intersection"
            // type, the first false stops the evaluation.
            Mu2eG4StackingOnlyCut : @local::mu2eg4CutNeutrinos
            Mu2eG4SteppingOnlyCut : @local::mu2eg4NoCut
            Mu2eG4CommonCut : {
                type : union
                pars : [
                    @local::CutEPPhN,
                    { type: inVolume pars: [ HallAir ] }
                ]
            }

            SimParticlePrinter : {
                enabled       : false
                primariesOnly : false
                prefix        : "SimParticle : "
            }
        } // g4run

        vacuuas1 : {
            module_type     : StepPointMCCollectionUpdater
            remapping       : g4run
            inputs          : [ "g4filter:vacuuas1:pionsg4s2" ]
            outInstanceName : "vacuuas1"
        }

        vacuuas2 : {
            module_type     : StepPointMCCollectionUpdater
            remapping       : g4run
            inputs          : [ "g4filter:vacuuas2:pionsg4s2" ]
            outInstanceName : "vacuuas2"
        }

        tgtCompressPVStop : {
            module_type    : CompressPhysicalVolumes
            volumesInput   : "g4run"
            hitInputs      : []
            particleInputs : [ "tgtStopFilter" ]
        }

        ootCompressPVStop : {
            module_type    : CompressPhysicalVolumes
            volumesInput   : "g4run"
            hitInputs      : []
            particleInputs : [ "ootStopFilter" ]
        }

        tgtStoppedPionFinder : {
            module_type      : StoppedParticlesFinder
            particleInput    : "g4run"
            // multiple matches, we'll get the one from the current process, which is what we want
            physVolInfoInput : "g4run"
            stoppingMaterial : "StoppingTarget_Al"
            particleTypes    : [ -211, 211 ] // pi- and pi+
        }

	ootStoppedPionFinder : {
	    module_type      : StoppedParticlesFinder
	    particleInput    : "g4run"
	    physVolInfoInput : "g4run"
	    vetoedMaterials  : [ "StoppingTarget_Al" ]
	    particleTypes    : [ -211, 211 ] // pi- and pi+
	    particleOffsetThreshold: 200000
	    verbosityLevel: 1
	}

    } // producers

    filters : {
        tgtStopFilter : {
            module_type               : FilterG4Out
            mainHitInputs             : []
            extraHitInputs            : [ "g4run:virtualdetector", "vacuuas1:vacuuas1" , "vacuuas2:vacuuas2" ]
            mainSPPtrInputs           : [ "tgtStoppedPionFinder" ]
            vetoDaughters             : [ "tgtStoppedPionFinder" ]
        }

        ootStopFilter : {
            module_type               : FilterG4Out
            mainHitInputs             : []
            extraHitInputs            : [ "g4run:virtualdetector", "vacuuas1:vacuuas1" , "vacuuas2:vacuuas2" ]
            mainSPPtrInputs           : [ "ootStoppedPionFinder" ]
            vetoDaughters             : [ "ootStoppedPionFinder" ]
        }
    } // filters

    analyzers : {
        genCountLogger : { module_type : GenEventCountReader }
    } // analyzers

    tgtPionStopFilterPath : [ g4run, vacuuas1, vacuuas2, tgtStoppedPionFinder, tgtStopFilter, tgtcompressPVStop ]
    ootPionStopFilterPath : [ g4run, vacuuas1, vacuuas2, ootStoppedPionFinder, ootStopFilter, ootCompressPVStop ]

    trigger_paths  : [ tgtPionStopFilterPath,  ootPionStopFilterPath]

    out       : [ tgtPionStopOutput, ootPionStopOutput ]
    stops     : [ genCountLogger ]
    end_paths : [ out, stops ]
}

outputs : {
    tgtPionStopOutput : {
        module_type    : RootOutput
        SelectEvents   : [tgtPionStopFilterPath]
#         outputCommands : [ "drop *_*_*_*",
#                            "keep mu2e::GenParticles_*_*_*",
#                            "keep mu2e::GenEventCount_*_*_*",
#                            "keep mu2e::StatusG4_*_*_*",
#                            "keep *_tgtStopFilter_*_*",
#                            "keep *_tgtCompressPVStop_*_*" ]
        fileName       : "sim.owner.tgtPions-g4s3.version.sequencer.art"
    }

    ootPionStopOutput : {
        module_type    : RootOutput
        SelectEvents   : [ootPionStopFilterPath]
#         outputCommands : [ "drop *_*_*_*",
#                            "keep mu2e::GenParticles_*_*_*",
#                            "keep mu2e::GenEventCount_*_*_*",
#                            "keep mu2e::StatusG4_*_*_*",
#                            "keep *_ootStopFilter_*_*",
#                            "keep *_ootCompressPVStop_*_*" ]
        fileName       : "sim.owner.ootPions-g4s3.version.sequencer.art"
    }
}

physics.producers.g4run.physics.minRangeCut : 1.0 // mm
physics.producers.g4run.physics.noDecay     : [ 211, -211 ]

// Limit the rate of "Begin processing the ... record" messages
services.message.destinations.log.categories.ArtReport.reportEvery : 1
services.message.destinations.log.categories.ArtReport.limit : 1
services.message.destinations.log.categories.ArtReport.timespan : 300

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.SeedService.baseSeed          : 8
services.SeedService.maxUniqueEngines  : 20
